<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
					http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">
	
	<!-- ********************************************************************************************************* -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="true"
		depends-on="propertyConfigurer">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />		
		<property name="maxIdleTime" value="1800" />
		<property name="maxStatements" value="100" />
		<property name="acquireIncrement" value="5" />
		<property name="idleConnectionTestPeriod" value="6000" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="checkoutTimeout" value="30000" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="entityInterceptor" ref="BaseHibernateInterceptor"/>
		<property name="mappingLocations">
			<list>
				<value>classpath:com/gv/**/common/pojo/*.hbm.xml</value>
				<value>classpath:com/lshop/common/pojo/logic/*.hbm.xml</value>
				<value>classpath:com/lshop/common/pojo/user/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.default_entity_mode">pojo</prop>
				<prop key="hibernate.query.substitutions">true=1,false=0</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		depends-on="sessionFactory">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="interceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor"
		depends-on="transactionManager,txAttributes">		
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributeSource">
			<ref bean="txAttributes" />
		</property>
	</bean>
	<!-- ********************************************************************************************************* -->	
	
	<bean id="dao" class="com.gv.core.hibernate3.HibernateBaseDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="BaseHibernateInterceptor" class="com.gv.base.interceptor.BaseHibernateInterceptor"></bean>
</beans>
